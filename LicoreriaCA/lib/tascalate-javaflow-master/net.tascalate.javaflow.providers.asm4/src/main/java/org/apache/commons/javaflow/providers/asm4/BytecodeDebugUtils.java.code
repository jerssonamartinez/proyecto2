/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.commons.javaflow.bytecode.transformation.asm4;

import java.io.PrintStream;
import java.io.PrintWriter;

import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassVisitor;
import org.objectweb.asm.util.CheckClassAdapter;
import org.objectweb.asm.util.TraceClassVisitor;

class BytecodeDebugUtils {

	private BytecodeDebugUtils() {}
	
    static ClassVisitor decorateClassVisitor(ClassVisitor visitor, final boolean check, final PrintStream dumpStream) {
    	if (check) {
    		visitor = new CheckClassAdapter(visitor, true);
    	}
    	
    	if (null != dumpStream) {
    		visitor = new TraceClassVisitor(visitor, new PrintWriter(dumpStream));
    	}
    	
    	return visitor;
    }
    
    static void dumpClass(final byte[] bytecode) {
    	dumpClass(bytecode, System.err);
    }
    
    static void dumpClass(final byte[] bytecode, final PrintStream out) {
    	new ClassReader(bytecode).accept( new TraceClassVisitor(new PrintWriter(out)), 0);
    }

}
